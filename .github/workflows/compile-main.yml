name: Final builds

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  buildLinux:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore Previous Cache
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          key: cache-build-linux

      - name: Installing Libraries
        run: haxe --interp -cp ./actions/libs-installer -D analyzer-optimize -main Main
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build linux

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: await require('./actions/cache/clear-cache.js')({github, context}, 'cache-build-linux');

      - name: Save Current Cache
        uses: actions/cache@main
        with:
          key: cache-build-linux
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-linux

      - name: Tar files
        run: tar -zcvf Linux.tar.gz export/release/linux/bin
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: Linux.tar.gz
  buildWindows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore Previous Cache
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          key: cache-build-windows

      - name: Installing Libraries
        run: haxe --interp -cp ./actions/libs-installer -D analyzer-optimize -main Main
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build windows

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: await require('./actions/cache/clear-cache.js')({github, context}, 'cache-build-windows');

      - name: Save Current Cache
        uses: actions/cache@main
        with:
          key: cache-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          restore-keys: |
            cache-build-windows

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore Previous Cache
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib/
            export/release/macos/haxe/
            export/release/macos/obj/
          key: cache-build-mac

      - name: Installing Libraries
        run: haxe --interp -cp ./actions/libs-installer -D analyzer-optimize -main Main
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build mac

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: await require('./actions/cache/clear-cache.js')({github, context}, 'cache-build-mac');

      - name: Save Current Cache
        uses: actions/cache@main
        with:
          key: cache-build-mac
          path: |
            .haxelib/
            export/release/macos/haxe/
            export/release/macos/obj/
          restore-keys: |
            cache-build-mac

      - name: Tar files
        run: tar -zcvf Mac.tar.gz export/release/macos/bin
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: macBuild
          path: Mac.tar.gz